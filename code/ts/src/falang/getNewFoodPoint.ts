/**
 * Generated by Falang
 * Document: getNewFoodPoint
 * Id: zdslcqgRu28Idy8zf--n8
 **/
import { FalangGlobal } from './_falang';
import { GameState } from './State';
import { Point } from './State';
import { getRandomPoint } from './getRandomPoint';
// f:+icon:function:UTXeesjId4EdZOMA35YW1
/**
 * 
 **/
export interface IgetNewFoodPointParams {
  state: GameState;
  _falangGlobal: FalangGlobal;
}
export async function getNewFoodPoint(_params: IgetNewFoodPointParams): Promise<Point> {
  const _falangGlobal = _params._falangGlobal;
  let state: GameState = JSON.parse(JSON.stringify(_params.state));
  let returnValue: Point = {x:0,y:0};
  let _continue_level = 0;
  // f:+icon:pseudo-cycle:DQZhz6wI53p8hPB7WPRAm
  do {
    // f:+icon:call_function:nv69UdcCiiXZ3zQeoqpO5
    let newFoodPoint: Point = await getRandomPoint({
      _falangGlobal,
      state: state,
    });
    // f:-icon:call_function:nv69UdcCiiXZ3zQeoqpO5
    // f:+icon:foreach:VckIcLeMDb4P6lC0ug7iX
    for (const bodyItem of state.snake.body) {
      // f:+icon:if:-B1ubzcYAsKCnoIqg2OP1
      if (newFoodPoint.x == bodyItem.x && newFoodPoint.y == bodyItem.y) {
        _continue_level = 1;
        break;
      } else {
      }
      // f:-icon:if:-B1ubzcYAsKCnoIqg2OP1
    }
    if (_continue_level > 1) { _continue_level--; break; }
    if (_continue_level == 1) { _continue_level--; continue; }
    // f:-icon:foreach:VckIcLeMDb4P6lC0ug7iX
    // f:+icon:assign_var:eY2h0tVu6B07rv-r5R7qI
    returnValue.x = newFoodPoint.x;
    // f:-icon:assign_var:eY2h0tVu6B07rv-r5R7qI
    // f:+icon:assign_var:AOOJSmk-jdzqHSn472XDm
    returnValue.y = newFoodPoint.y;
    // f:-icon:assign_var:AOOJSmk-jdzqHSn472XDm
  } while (false);
  // f:-icon:pseudo-cycle:DQZhz6wI53p8hPB7WPRAm
  return returnValue;
}
// f:-icon:function:UTXeesjId4EdZOMA35YW1

